{
  "version": 3,
  "sources": ["../../@coreui/utils/src/deepObjectsMerge.ts", "../../@coreui/utils/src/getStyle.ts", "../../@coreui/utils/src/getColor.ts", "../../@coreui/utils/src/hexToRgb.ts", "../../@coreui/utils/src/hexToRgba.ts", "../../@coreui/utils/src/makeUid.ts", "../../@coreui/utils/src/omitByKeys.ts", "../../@coreui/utils/src/pickByKeys.ts", "../../@coreui/utils/src/rgbToHex.ts"],
  "sourcesContent": ["/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): deepObjectsMerge.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst deepObjectsMerge = (target: object, source: object) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst getStyle = (property: string, element?: Element) => {\r\n  if (typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  if (typeof document === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const _element = element ?? document.body\r\n\r\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\r\n}\r\n\r\nexport default getStyle\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): getColor.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport getStyle from './getStyle'\r\n\r\nconst getColor = (rawProperty: string, element?: Element) => {\r\n  const property = `--${rawProperty}`\r\n  const style = getStyle(property, element)\r\n  return style ? style : rawProperty\r\n}\r\n\r\nexport default getColor\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): hexToRgb.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n/* eslint-disable no-magic-numbers */\r\nconst hexToRgb = (color: string) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\r\n\r\n  if (!hex) {\r\n    // throw new Error(`${color} is not a valid hex color`)\r\n  }\r\n\r\n  let r\r\n  let g\r\n  let b\r\n\r\n  if (color.length === 7) {\r\n    r = parseInt(color.slice(1, 3), 16)\r\n    g = parseInt(color.slice(3, 5), 16)\r\n    b = parseInt(color.slice(5, 7), 16)\r\n  } else {\r\n    r = parseInt(color.slice(1, 2), 16)\r\n    g = parseInt(color.slice(2, 3), 16)\r\n    b = parseInt(color.slice(3, 5), 16)\r\n  }\r\n\r\n  return `rgba(${r}, ${g}, ${b})`\r\n}\r\n\r\nexport default hexToRgb\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): hexToRgba.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n/* eslint-disable no-magic-numbers */\r\nconst hexToRgba = (color: string, opacity = 100) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\r\n\r\n  if (!hex) {\r\n    throw new Error(`${color} is not a valid hex color`)\r\n  }\r\n\r\n  let r\r\n  let g\r\n  let b\r\n\r\n  if (color.length === 7) {\r\n    r = parseInt(color.slice(1, 3), 16)\r\n    g = parseInt(color.slice(3, 5), 16)\r\n    b = parseInt(color.slice(5, 7), 16)\r\n  } else {\r\n    r = parseInt(color.slice(1, 2), 16)\r\n    g = parseInt(color.slice(2, 3), 16)\r\n    b = parseInt(color.slice(3, 5), 16)\r\n  }\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${opacity / 100})`\r\n}\r\n\r\nexport default hexToRgba\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): makeUid.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n//function for UI releted ID assignment, due to one in 10^15 probability of duplication\r\nconst makeUid = () => {\r\n  const key = Math.random().toString(36).substr(2)\r\n  return 'uid-' + key\r\n}\r\n\r\nexport default makeUid", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): omitByKeys.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst omitByKeys = (originalObject: object, keys: string | string[]) => {\r\n  const newObj = {}\r\n  const objKeys = Object.keys(originalObject)\r\n  for (let i = 0; i < objKeys.length; i++) {\r\n    !keys.includes(objKeys[i]) && (newObj[objKeys[i]] = originalObject[objKeys[i]])\r\n  }\r\n  return newObj\r\n}\r\n\r\nexport default omitByKeys\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): pickByKeys.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst pickByKeys = (originalObject: object, keys: string | string[]) => {\r\n  const newObj = {}\r\n  for (let i = 0; i < keys.length; i++) {\r\n    newObj[keys[i]] = originalObject[keys[i]]\r\n  }\r\n  return newObj\r\n}\r\n\r\nexport default pickByKeys\r\n", "/**\r\n * --------------------------------------------------------------------------\r\n * CoreUI Utils (__COREUI_VERSION__): rgbToHex.ts\r\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst rgbToHex = (color: string) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  if (color === 'transparent') {\r\n    return '#00000000'\r\n  }\r\n\r\n  const rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)\r\n\r\n  if (!rgb) {\r\n    throw new Error(`${color} is not a valid rgb color`)\r\n  }\r\n\r\n  const r = `0${parseInt(rgb[1], 10).toString(16)}`\r\n  const g = `0${parseInt(rgb[2], 10).toString(16)}`\r\n  const b = `0${parseInt(rgb[3], 10).toString(16)}`\r\n\r\n  return `#${r.slice(-2)}${g.slice(-2)}${b.slice(-2)}`\r\n}\r\n\r\nexport default rgbToHex\r\n"],
  "mappings": "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",
  "names": []
}
